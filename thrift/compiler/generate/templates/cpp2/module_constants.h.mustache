<%!

  Copyright 2016 Facebook, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

%>
<% > Autogen%>
#pragma once

#include "<%program:normalizedIncludePrefix%><%program:name%>_types.h"
#include <thrift/lib/cpp2/protocol/Protocol.h>
<% > common/namespace_cpp2_begin%>


struct <%program:name%>_constants {

<%#program:constants%><%#constant:type%><%#constant:value%>
  <%^type:container?%>
    <%#type:string?%>
  // consider using folly::StringPiece instead of std::string whenever possible
  // to referencing this statically allocated string constant, in order to
  // prevent unnecessary allocations

  static constexpr char const * const <%constant:name%>_ = <% > common/cxx_value_prefix%><% > common/const_value%><% > common/cxx_value_suffix%>;

  static constexpr char const * <%constant:name%>() {
    return <%constant:name%>_;
  }

    <%/type:string?%>
    <%#type:enum?%>
      <%#constant:enum_value?%>
  static constexpr <% > Type%> const <%constant:name%>_ = <% > common/namespace_cpp2%><%type:name%>::<%constant:enum_value%>;

      <%/constant:enum_value?%>
      <%^constant:enum_value?%>
  static constexpr <% > Type%> const <%constant:name%>_ = static_cast<<% > common/namespace_cpp2%><%type:name%>>(<%constant:enum_value%>);

      <%/constant:enum_value?%>
  static constexpr <% > Type%> <%constant:name%>() {
    return <%constant:name%>_;
  }

    <%/type:enum?%>
    <%^type:string?%><%^type:enum?%>
  static constexpr <% > Type%> const <%constant:name%>_ = <% > common/cxx_value_prefix%><% > common/const_value%><% > common/cxx_value_suffix%>;

  static constexpr <% > Type%> <%constant:name%>() {
    return <%constant:name%>_;
  }

    <%/type:enum?%><%/type:string?%>
  <%/type:container?%>
  <%#type:container?%>
  static <% > Type%> const& <%constant:name%>();

  <%/type:container?%>
<%/constant:value%><%/constant:type%><%/program:constants%>
};

<% > common/namespace_cpp2_end%>
