#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libcpp.string cimport string
from libcpp cimport bool as cbool
from cpython cimport bool as pbool
from libc.stdint cimport int8_t, int16_t, int32_t, int64_t
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from libcpp.unordered_set cimport unordered_set as cuset
from libcpp.unordered_map cimport unordered_map as cumap
from thrift.py3.exceptions cimport cTException, Error as __Error
cimport thrift.py3.types




cdef extern from "gen-cpp2/includes_types_custom_protocol.h" namespace "cpp2":
    cdef cppclass cIncluded__isset "cpp2::Included::__isset":
        bint MyIntField

    # Forward Declaration
    cdef cppclass cIncluded "cpp2::Included"

    cdef cppclass cIncluded "cpp2::Included":
        cIncluded() except +
        cIncluded(const cIncluded&) except +
        bint operator==(cIncluded&)
        int64_t MyIntField
        cIncluded__isset __isset


cdef extern from "<utility>" namespace "std" nogil:
    cdef shared_ptr[cIncluded] move(unique_ptr[cIncluded])

# Forward Definition of the cython struct
cdef class Included(thrift.py3.types.Struct)

cdef class Included(thrift.py3.types.Struct):
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[cIncluded] c_Included

    @staticmethod
    cdef create(shared_ptr[cIncluded] c_Included)




cdef extern from "gen-cpp2/includes_constants.h" namespace "cpp2":
    cdef int64_t cIncludedConstant "cpp2::includes_constants::IncludedConstant"
