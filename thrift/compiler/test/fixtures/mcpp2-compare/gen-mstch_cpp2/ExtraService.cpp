/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/ExtraService.h"

#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/ExtraService.tcc"

#include <thrift/lib/cpp2/protocol/Protocol.h>
#include <thrift/lib/cpp2/protocol/BinaryProtocol.h>
#include <thrift/lib/cpp2/protocol/CompactProtocol.h>
namespace some { namespace valid { namespace ns {

std::unique_ptr<apache::thrift::AsyncProcessor> ExtraServiceSvIf::getProcessor() {
  return std::make_unique<ExtraServiceAsyncProcessor>(this);
}

bool ExtraServiceSvIf::simple_function() {
  throw apache::thrift::TApplicationException("Function simple_function is unimplemented");
}

folly::Future<bool> ExtraServiceSvIf::future_simple_function() {
  return apache::thrift::detail::si::future([&] { return simple_function(); });
}

void ExtraServiceSvIf::async_tm_simple_function(std::unique_ptr<apache::thrift::HandlerCallback<bool>> callback) {
  apache::thrift::detail::si::async_tm(this, std::move(callback), [&] { return future_simple_function(); });
}

void ExtraServiceSvIf::throws_function() {
  throw apache::thrift::TApplicationException("Function throws_function is unimplemented");
}

folly::Future<folly::Unit> ExtraServiceSvIf::future_throws_function() {
  return apache::thrift::detail::si::future([&] { return throws_function(); });
}

void ExtraServiceSvIf::async_tm_throws_function(std::unique_ptr<apache::thrift::HandlerCallback<void>> callback) {
  apache::thrift::detail::si::async_tm(this, std::move(callback), [&] { return future_throws_function(); });
}

bool ExtraServiceSvIf::throws_function2(bool /*param1*/) {
  throw apache::thrift::TApplicationException("Function throws_function2 is unimplemented");
}

folly::Future<bool> ExtraServiceSvIf::future_throws_function2(bool param1) {
  return apache::thrift::detail::si::future([&] { return throws_function2(param1); });
}

void ExtraServiceSvIf::async_tm_throws_function2(std::unique_ptr<apache::thrift::HandlerCallback<bool>> callback, bool param1) {
  apache::thrift::detail::si::async_tm(this, std::move(callback), [&] { return future_throws_function2(param1); });
}

void ExtraServiceSvIf::throws_function3(std::map<int32_t, std::string>& /*_return*/, bool /*param1*/, std::unique_ptr<std::string> /*param2*/) {
  throw apache::thrift::TApplicationException("Function throws_function3 is unimplemented");
}

folly::Future<std::unique_ptr<std::map<int32_t, std::string>>> ExtraServiceSvIf::future_throws_function3(bool param1, std::unique_ptr<std::string> param2) {
  return apache::thrift::detail::si::future_returning_uptr([&](std::map<int32_t, std::string>& _return) { throws_function3(_return, param1, std::move(param2)); });
}

void ExtraServiceSvIf::async_tm_throws_function3(std::unique_ptr<apache::thrift::HandlerCallback<std::unique_ptr<std::map<int32_t, std::string>>>> callback, bool param1, std::unique_ptr<std::string> param2) {
  apache::thrift::detail::si::async_tm(this, std::move(callback), [&] { return future_throws_function3(param1, std::move(param2)); });
}

void ExtraServiceSvIf::oneway_void_ret() {
  throw apache::thrift::TApplicationException("Function oneway_void_ret is unimplemented");
}

folly::Future<folly::Unit> ExtraServiceSvIf::future_oneway_void_ret() {
  return apache::thrift::detail::si::future([&] { return oneway_void_ret(); });
}

void ExtraServiceSvIf::async_tm_oneway_void_ret(std::unique_ptr<apache::thrift::HandlerCallbackBase> callback) {
  apache::thrift::detail::si::async_tm_oneway(this, std::move(callback), [&] { return future_oneway_void_ret(); });
}

void ExtraServiceSvIf::oneway_void_ret_i32_i32_i32_i32_i32_param(int32_t /*param1*/, int32_t /*param2*/, int32_t /*param3*/, int32_t /*param4*/, int32_t /*param5*/) {
  throw apache::thrift::TApplicationException("Function oneway_void_ret_i32_i32_i32_i32_i32_param is unimplemented");
}

folly::Future<folly::Unit> ExtraServiceSvIf::future_oneway_void_ret_i32_i32_i32_i32_i32_param(int32_t param1, int32_t param2, int32_t param3, int32_t param4, int32_t param5) {
  return apache::thrift::detail::si::future([&] { return oneway_void_ret_i32_i32_i32_i32_i32_param(param1, param2, param3, param4, param5); });
}

void ExtraServiceSvIf::async_tm_oneway_void_ret_i32_i32_i32_i32_i32_param(std::unique_ptr<apache::thrift::HandlerCallbackBase> callback, int32_t param1, int32_t param2, int32_t param3, int32_t param4, int32_t param5) {
  apache::thrift::detail::si::async_tm_oneway(this, std::move(callback), [&] { return future_oneway_void_ret_i32_i32_i32_i32_i32_param(param1, param2, param3, param4, param5); });
}

void ExtraServiceSvIf::oneway_void_ret_map_setlist_param(std::unique_ptr<std::map<std::string, int64_t>> /*param1*/, std::unique_ptr<std::set<std::vector<std::string>>> /*param2*/) {
  throw apache::thrift::TApplicationException("Function oneway_void_ret_map_setlist_param is unimplemented");
}

folly::Future<folly::Unit> ExtraServiceSvIf::future_oneway_void_ret_map_setlist_param(std::unique_ptr<std::map<std::string, int64_t>> param1, std::unique_ptr<std::set<std::vector<std::string>>> param2) {
  return apache::thrift::detail::si::future([&] { return oneway_void_ret_map_setlist_param(std::move(param1), std::move(param2)); });
}

void ExtraServiceSvIf::async_tm_oneway_void_ret_map_setlist_param(std::unique_ptr<apache::thrift::HandlerCallbackBase> callback, std::unique_ptr<std::map<std::string, int64_t>> param1, std::unique_ptr<std::set<std::vector<std::string>>> param2) {
  apache::thrift::detail::si::async_tm_oneway(this, std::move(callback), [&] { return future_oneway_void_ret_map_setlist_param(std::move(param1), std::move(param2)); });
}

void ExtraServiceSvIf::oneway_void_ret_struct_param(std::unique_ptr< ::some::valid::ns::MyStruct> /*param1*/) {
  throw apache::thrift::TApplicationException("Function oneway_void_ret_struct_param is unimplemented");
}

folly::Future<folly::Unit> ExtraServiceSvIf::future_oneway_void_ret_struct_param(std::unique_ptr< ::some::valid::ns::MyStruct> param1) {
  return apache::thrift::detail::si::future([&] { return oneway_void_ret_struct_param(std::move(param1)); });
}

void ExtraServiceSvIf::async_tm_oneway_void_ret_struct_param(std::unique_ptr<apache::thrift::HandlerCallbackBase> callback, std::unique_ptr< ::some::valid::ns::MyStruct> param1) {
  apache::thrift::detail::si::async_tm_oneway(this, std::move(callback), [&] { return future_oneway_void_ret_struct_param(std::move(param1)); });
}

void ExtraServiceSvIf::oneway_void_ret_listunion_param(std::unique_ptr<std::vector< ::some::valid::ns::ComplexUnion>> /*param1*/) {
  throw apache::thrift::TApplicationException("Function oneway_void_ret_listunion_param is unimplemented");
}

folly::Future<folly::Unit> ExtraServiceSvIf::future_oneway_void_ret_listunion_param(std::unique_ptr<std::vector< ::some::valid::ns::ComplexUnion>> param1) {
  return apache::thrift::detail::si::future([&] { return oneway_void_ret_listunion_param(std::move(param1)); });
}

void ExtraServiceSvIf::async_tm_oneway_void_ret_listunion_param(std::unique_ptr<apache::thrift::HandlerCallbackBase> callback, std::unique_ptr<std::vector< ::some::valid::ns::ComplexUnion>> param1) {
  apache::thrift::detail::si::async_tm_oneway(this, std::move(callback), [&] { return future_oneway_void_ret_listunion_param(std::move(param1)); });
}

bool ExtraServiceSvNull::simple_function() {
  return 0;
}

void ExtraServiceSvNull::throws_function() {}

bool ExtraServiceSvNull::throws_function2(bool /*param1*/) {
  return 0;
}

void ExtraServiceSvNull::throws_function3(std::map<int32_t, std::string>& /*_return*/, bool /*param1*/, std::unique_ptr<std::string> /*param2*/) {}

void ExtraServiceSvNull::oneway_void_ret() {}

void ExtraServiceSvNull::oneway_void_ret_i32_i32_i32_i32_i32_param(int32_t /*param1*/, int32_t /*param2*/, int32_t /*param3*/, int32_t /*param4*/, int32_t /*param5*/) {}

void ExtraServiceSvNull::oneway_void_ret_map_setlist_param(std::unique_ptr<std::map<std::string, int64_t>> /*param1*/, std::unique_ptr<std::set<std::vector<std::string>>> /*param2*/) {}

void ExtraServiceSvNull::oneway_void_ret_struct_param(std::unique_ptr< ::some::valid::ns::MyStruct> /*param1*/) {}

void ExtraServiceSvNull::oneway_void_ret_listunion_param(std::unique_ptr<std::vector< ::some::valid::ns::ComplexUnion>> /*param1*/) {}

const char* ExtraServiceAsyncProcessor::getServiceName() {
  return "ExtraService";
}

folly::Optional<std::string> ExtraServiceAsyncProcessor::getCacheKey(folly::IOBuf* buf, apache::thrift::protocol::PROTOCOL_TYPES protType) {
  return apache::thrift::detail::ap::get_cache_key(buf, protType, cacheKeyMap_);
}

void ExtraServiceAsyncProcessor::process(std::unique_ptr<apache::thrift::ResponseChannel::Request> req, std::unique_ptr<folly::IOBuf> buf, apache::thrift::protocol::PROTOCOL_TYPES protType, apache::thrift::Cpp2RequestContext* context, folly::EventBase* eb, apache::thrift::concurrency::ThreadManager* tm) {
  apache::thrift::detail::ap::process(this, std::move(req), std::move(buf), protType, context, eb, tm);
}

bool ExtraServiceAsyncProcessor::isOnewayMethod(const folly::IOBuf* buf, const apache::thrift::transport::THeader* header) {
  return apache::thrift::detail::ap::is_oneway_method(buf, header, onewayMethods_);
}

std::unordered_set<std::string> ExtraServiceAsyncProcessor::onewayMethods_ {
  "oneway_void_ret",
  "oneway_void_ret_i32_i32_i32_i32_i32_param",
  "oneway_void_ret_map_setlist_param",
  "oneway_void_ret_struct_param",
  "oneway_void_ret_listunion_param"
};
std::unordered_map<std::string, int16_t> ExtraServiceAsyncProcessor::cacheKeyMap_ {};
const ExtraServiceAsyncProcessor::BinaryProtocolProcessMap& ExtraServiceAsyncProcessor::getBinaryProtocolProcessMap() {
  return binaryProcessMap_;
}

const ExtraServiceAsyncProcessor::BinaryProtocolProcessMap ExtraServiceAsyncProcessor::binaryProcessMap_ {
  {"simple_function", &ExtraServiceAsyncProcessor::_processInThread_simple_function<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
  {"throws_function", &ExtraServiceAsyncProcessor::_processInThread_throws_function<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
  {"throws_function2", &ExtraServiceAsyncProcessor::_processInThread_throws_function2<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
  {"throws_function3", &ExtraServiceAsyncProcessor::_processInThread_throws_function3<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
  {"oneway_void_ret", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
  {"oneway_void_ret_i32_i32_i32_i32_i32_param", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret_i32_i32_i32_i32_i32_param<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
  {"oneway_void_ret_map_setlist_param", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret_map_setlist_param<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
  {"oneway_void_ret_struct_param", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret_struct_param<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
  {"oneway_void_ret_listunion_param", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret_listunion_param<apache::thrift::BinaryProtocolReader, apache::thrift::BinaryProtocolWriter>},
};

const ExtraServiceAsyncProcessor::CompactProtocolProcessMap& ExtraServiceAsyncProcessor::getCompactProtocolProcessMap() {
  return compactProcessMap_;
}

const ExtraServiceAsyncProcessor::CompactProtocolProcessMap ExtraServiceAsyncProcessor::compactProcessMap_ {
  {"simple_function", &ExtraServiceAsyncProcessor::_processInThread_simple_function<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
  {"throws_function", &ExtraServiceAsyncProcessor::_processInThread_throws_function<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
  {"throws_function2", &ExtraServiceAsyncProcessor::_processInThread_throws_function2<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
  {"throws_function3", &ExtraServiceAsyncProcessor::_processInThread_throws_function3<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
  {"oneway_void_ret", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
  {"oneway_void_ret_i32_i32_i32_i32_i32_param", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret_i32_i32_i32_i32_i32_param<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
  {"oneway_void_ret_map_setlist_param", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret_map_setlist_param<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
  {"oneway_void_ret_struct_param", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret_struct_param<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
  {"oneway_void_ret_listunion_param", &ExtraServiceAsyncProcessor::_processInThread_oneway_void_ret_listunion_param<apache::thrift::CompactProtocolReader, apache::thrift::CompactProtocolWriter>},
};

}}} // some::valid::ns
namespace apache { namespace thrift {

}} // apache::thrift
